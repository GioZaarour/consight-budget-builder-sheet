import React, { useState } from 'react';
import defaultCostCodes from './defaultCostCodes';

interface CostCode {
  code: string;
  trade: string;
}

interface AddDivisionDialogProps {
  isOpen: boolean;
  onClose: () => void;
  onAdd: (costCode: string, divisionName: string) => void;
}

export const AddDivisionDialog: React.FC<AddDivisionDialogProps> = ({
  isOpen,
  onClose,
  onAdd,
}) => {
  const [selectedCostCode, setSelectedCostCode] = useState<string>('');
  const [searchTerm, setSearchTerm] = useState('');

  const filteredCostCodes = defaultCostCodes.filter((item: CostCode) =>
    item.code.toLowerCase().includes(searchTerm.toLowerCase()) ||
    item.trade.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (selectedCostCode) {
      const selectedItem = defaultCostCodes.find(item => item.code === selectedCostCode);
      if (selectedItem) {
        onAdd(selectedItem.code, selectedItem.trade);
        setSelectedCostCode('');
        setSearchTerm('');
        onClose();
      }
    }
  };

  if (!isOpen) return null;

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 1000,
    }}>
      <div style={{
        backgroundColor: 'white',
        padding: '24px',
        borderRadius: '8px',
        width: '500px',
        maxHeight: '80vh',
        display: 'flex',
        flexDirection: 'column',
      }}>
        <h2 style={{ marginTop: 0 }}>Add Division</h2>
        <form onSubmit={handleSubmit}>
          <div style={{ marginBottom: '16px' }}>
            <label style={{ display: 'block', marginBottom: '8px' }}>
              Search Cost Codes:
              <input
                type="text"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                style={{
                  width: '100%',
                  padding: '8px',
                  border: '1px solid #ddd',
                  borderRadius: '4px',
                  marginTop: '4px',
                }}
                placeholder="Search by code or trade name..."
              />
            </label>
          </div>

          <div style={{
            marginBottom: '16px',
            maxHeight: '300px',
            overflowY: 'auto',
            border: '1px solid #ddd',
            borderRadius: '4px',
          }}>
            {filteredCostCodes.map((item: CostCode) => (
              <div
                key={item.code}
                onClick={() => setSelectedCostCode(item.code)}
                style={{
                  padding: '8px 12px',
                  cursor: 'pointer',
                  backgroundColor: selectedCostCode === item.code ? '#e9ecef' : 'transparent',
                  borderBottom: '1px solid #ddd',
                }}
                onMouseEnter={(e) => {
                  (e.target as HTMLDivElement).style.backgroundColor = '#f8f9fa';
                }}
                onMouseLeave={(e) => {
                  (e.target as HTMLDivElement).style.backgroundColor = 
                    selectedCostCode === item.code ? '#e9ecef' : 'transparent';
                }}
              >
                <strong>{item.code}</strong> - {item.trade}
              </div>
            ))}
          </div>

          <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '8px' }}>
            <button
              type="button"
              onClick={onClose}
              style={{
                padding: '8px 16px',
                border: '1px solid #ddd',
                borderRadius: '4px',
                backgroundColor: '#f8f9fa',
              }}
            >
              Cancel
            </button>
            <button
              type="submit"
              disabled={!selectedCostCode}
              style={{
                padding: '8px 16px',
                border: 'none',
                borderRadius: '4px',
                backgroundColor: selectedCostCode ? '#007bff' : '#6c757d',
                color: 'white',
                cursor: selectedCostCode ? 'pointer' : 'not-allowed',
              }}
            >
              Add Division
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}; 