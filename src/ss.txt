// import { useEffect, useRef } from 'react';
// import "@univerjs/design/lib/index.css";
// import "@univerjs/ui/lib/index.css";
// import "@univerjs/docs-ui/lib/index.css";
// import "@univerjs/sheets-ui/lib/index.css";
// import "@univerjs/sheets-formula-ui/lib/index.css";

// import { LocaleType, Tools, Univer, IWorkbookData, UniverInstanceType, IScale } from "@univerjs/core";
// import { defaultTheme } from "@univerjs/design";
// import { UniverFormulaEnginePlugin } from "@univerjs/engine-formula";
// import { UniverRenderEnginePlugin, SheetColumnHeaderExtensionRegistry } from "@univerjs/engine-render";
// import { UniverUIPlugin } from "@univerjs/ui";
// import { UniverDocsPlugin } from "@univerjs/docs";
// import { UniverDocsUIPlugin } from "@univerjs/docs-ui";
// import { UniverSheetsPlugin } from "@univerjs/sheets";
// import { UniverSheetsFormulaPlugin } from "@univerjs/sheets-formula";
// import { UniverSheetsFormulaUIPlugin } from "@univerjs/sheets-formula-ui";
// import { UniverSheetsUIPlugin } from "@univerjs/sheets-ui";
// import { 
//   SpreadsheetSkeleton, 
//   UniverRenderingContext,
//   DEFAULT_FONTFACE_PLANE, 
//   FIX_ONE_PIXEL_BLUR_OFFSET, 
//   getColor, 
//   SheetExtension 
// } from '@univerjs/engine-render';

// interface UniverSpreadsheetProps {
//   customColumnHeaders?: string[];
// }

// const UNIQUE_KEY = 'CustomColumnHeaderExtension';

// class ColumnHeaderCustomExtension extends SheetExtension {
//   private headers: string[];
  
//   constructor(headers: string[] = []) { // Provide default empty array
//       super();
//       this.headers = headers;
//   }

//   override uKey = UNIQUE_KEY;

//   override get zIndex() {
//       return 11;
//   }

//   override draw(ctx: UniverRenderingContext, parentScale: IScale, spreadsheetSkeleton: SpreadsheetSkeleton) {
//       const { rowColumnSegment, columnHeaderHeight = 0 } = spreadsheetSkeleton;
//       const { startColumn, endColumn } = rowColumnSegment;

//       if (!spreadsheetSkeleton) {
//           return;
//       }

//       const { rowHeightAccumulation, columnTotalWidth, columnWidthAccumulation, rowTotalHeight } =
//           spreadsheetSkeleton;

//       if (
//           !rowHeightAccumulation ||
//           !columnWidthAccumulation ||
//           columnTotalWidth === undefined ||
//           rowTotalHeight === undefined
//       ) {
//           return;
//       }

//       // Set background
//       ctx.fillStyle = getColor([248, 249, 250]);
//       ctx.fillRect(0, 0, columnTotalWidth, columnHeaderHeight);

//       // Text settings
//       ctx.textAlign = 'center';
//       ctx.textBaseline = 'middle';
//       ctx.fillStyle = getColor([0, 0, 0]);
//       ctx.font = `13px ${DEFAULT_FONTFACE_PLANE}`;

//       ctx.beginPath();
//       ctx.lineWidth = 1;
//       ctx.translateWithPrecisionRatio(FIX_ONE_PIXEL_BLUR_OFFSET, FIX_ONE_PIXEL_BLUR_OFFSET);

//       // Border color
//       ctx.strokeStyle = getColor([217, 217, 217]);

//       let preColumnPosition: number = 0;
//       const columnWidthAccumulationLength = columnWidthAccumulation.length;

//       for (let c = startColumn - 1; c <= endColumn; c++) {
//           if (c < 0 || c > columnWidthAccumulationLength - 1) {
//               continue;
//           }

//           const columnEndPosition = columnWidthAccumulation[c];
          
//           if (columnEndPosition === undefined || preColumnPosition === columnEndPosition) {
//               continue;
//           }

//           // Draw header text
//           const middleCellPos = preColumnPosition + (columnEndPosition - preColumnPosition) / 2;
//           const headerText = this.headers[c];
//           if (headerText !== undefined && headerText !== null) {
//               ctx.fillText(headerText, middleCellPos, columnHeaderHeight / 2);
//           }

//           // Draw vertical border
//           ctx.beginPath();
//           ctx.moveTo(columnEndPosition, 0);
//           ctx.lineTo(columnEndPosition, columnHeaderHeight);
//           ctx.stroke();

//           preColumnPosition = columnEndPosition;
//       }

//       // Draw bottom border
//       if (columnTotalWidth !== undefined) {
//           ctx.beginPath();
//           ctx.moveTo(0, columnHeaderHeight - 0.5);
//           ctx.lineTo(columnTotalWidth, columnHeaderHeight - 0.5);
//           ctx.stroke();
//       }
//   }
// }


// const UniverSpreadsheet = ({ customColumnHeaders = [] }: UniverSpreadsheetProps) => {
//   const containerRef = useRef<HTMLDivElement>(null);
//   const univerRef = useRef<Univer | null>(null);
//   const mountedRef = useRef(false);

//   useEffect(() => {
//     mountedRef.current = true;

//     const setupUniver = async () => {
//       if (!containerRef.current || univerRef.current) {
//         return;
//       }

//       try {
//         // Create Univer instance
//         const univer = new Univer({
//           theme: defaultTheme,
//           locale: LocaleType.EN_US,
//         });

//         // Register custom column header extension
//         const headerExtension = new ColumnHeaderCustomExtension(customColumnHeaders);
//         SheetColumnHeaderExtensionRegistry.add(headerExtension);

//         // Register core plugins
//         await Promise.all([
//           univer.registerPlugin(UniverRenderEnginePlugin),
//           univer.registerPlugin(UniverFormulaEnginePlugin),
//           univer.registerPlugin(UniverDocsPlugin),
//           univer.registerPlugin(UniverSheetsPlugin),
//           univer.registerPlugin(UniverSheetsFormulaPlugin),
//         ]);

//         await new Promise(resolve => setTimeout(resolve, 0));

//         if (!mountedRef.current) {
//           univer.dispose();
//           return;
//         }

//         // Register UI plugins
//         await Promise.all([
//           univer.registerPlugin(UniverUIPlugin, {
//             container: containerRef.current,
//           }),
//           univer.registerPlugin(UniverDocsUIPlugin),
//           univer.registerPlugin(UniverSheetsUIPlugin),
//           univer.registerPlugin(UniverSheetsFormulaUIPlugin),
//         ]);

//         if (!mountedRef.current) {
//           univer.dispose();
//           return;
//         }

//         // Initialize workbook
//         const workbookData: IWorkbookData = {
//           id: '1',
//           appVersion: '1.0.0',
//           name: 'Workbook',
//           locale: LocaleType.EN_US,
//           sheets: {
//             sheet1: {
//               id: 'sheet1',
//               name: 'Sheet 1',
//               cellData: {},
//               rowCount: 1000,
//               columnCount: Math.max(customColumnHeaders.length, 26),
//               defaultColumnWidth: 100,
//               defaultRowHeight: 25,
//             },
//           },
//           sheetOrder: ['sheet1'],
//           styles: {},
//         };

//         univer.createUnit(UniverInstanceType.UNIVER_SHEET, workbookData);

//         if (mountedRef.current) {
//           univerRef.current = univer;
//         } else {
//           univer.dispose();
//         }
//       } catch (error) {
//         console.error('Error initializing Univer:', error);
//         if (univerRef.current) {
//           univerRef.current.dispose();
//           univerRef.current = null;
//         }
//       }
//     };

//     setupUniver();

//     return () => {
//       mountedRef.current = false;
//       if (univerRef.current) {
//         try {
//           univerRef.current.dispose();
//           univerRef.current = null;
//         } catch (error) {
//           console.error('Error disposing Univer:', error);
//         }
//       }
//     };
//   }, [customColumnHeaders]);

//   return (
//     <div 
//       ref={containerRef}
//       style={{ 
//         width: '100%', 
//         height: '100vh',
//         position: 'relative',
//         overflow: 'hidden'
//       }}
//     />
//   );
// };

// export default UniverSpreadsheet;